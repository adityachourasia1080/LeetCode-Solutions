---------M1
Not Efficient
class Solution {
public:
    void serialize(TreeNode* p,vector<int>&v)
    {
        if (p==NULL)
        {
            v.push_back(99999);
            return;
        }
        v.push_back(p->val);
        serialize(p->left,v);
        serialize(p->right,v);
    }
    bool isSameTree(TreeNode* p, TreeNode* q) {
        
      vector<int> v1,v2;
        serialize(p,v1);
        serialize(q,v2);
    if (v1.size()!=v2.size())  return 0;
        for (int i=0;i<v1.size();i++)
        {
            if (v1[i]!=v2[i])  return false;
        }
        return true;
    }
};


------M2  efficient

class Solution {
public:
    bool hat(TreeNode* p, TreeNode* q)
    {
        if (p==NULL && q==NULL)  return true;
if (p==NULL || q==NULL)  return false;
        
        if (p->val !=q->val)  return false;
        
       if ( hat(p->left,q->left)==false) return false;
       return  hat(p->right,q->right);
    
    }
    bool isSameTree(TreeNode* p, TreeNode* q) {
        return hat(p,q);
    }
};
